{"version":3,"sources":["Component/MyName/MyName.jsx","Component/MySkills/MySkill.jsx","Component/MySkills/MySkills.jsx","Containers/MySkills/MySkills.jsx","Component/common/Input.jsx","Component/common/Button.jsx","Component/myFriends/enterNewFriendName.jsx","Component/myFriends/nameMyFriend.jsx","Component/myFriends/namesMyFriends.jsx","redux/reducers/namesMyFriends.js","Containers/myFriends/namesMyFriends.js","Component/TheMonday/Monday.jsx","Component/NavBar/NavBar.jsx","Component/Thursday/Thursday.jsx","Component/Friday/Friday.jsx","Component/Wednesday/Wednesday.jsx","Component/Tuesday/todoLists/TodoListTitle.jsx","Component/Tuesday/todoLists/TodoListTask.jsx","Component/Tuesday/todoLists/TodoListTasks.jsx","Component/Tuesday/todoLists/TodoListFooter.jsx","Component/Tuesday/todoLists/AddNewItemForm.jsx","Component/Tuesday/todoLists/repository.js","redux/reducers/todoList.js","Component/Tuesday/todoLists/TodoList.jsx","redux/reducers/todoLists.js","Component/Tuesday/todoLists/MainTodoList.jsx","Component/Tuesday/Tuesday.jsx","App.js","redux/reducers/mySkills.js","redux/reducers/myName.js","redux/store.js","index.js"],"names":["MyName","useState","name","className","MySkill","skill","MySkills","allMySkills","arrSkills","map","MySkillsContainer","this","props","Component","connect","state","mySkills","skills","Input","onNewNameChange","namesFriends","onChange","value","autoFocus","Button","setNewName","setNamesFriends","onClick","EnterNewFriendName","e","newValue","target","NameMyFriend","NamesMyFriends","arrNamesFriends","names","initialState","namesMyFriends","action","type","payload","NamesMyFriendsContainer","nameMyFriend","React","Monday","NavBar","to","Thursday","Friday","Wednesday","TodoListTitle","title","TodoListTask","editMode","onIsDoneChanged","changeStatus","task","currentTarget","checked","onTitleChanged","changeTitle","activatedEditMode","setState","deActivatedEditMode","render","isDone","id","onBlur","priority","TodoListTasks","tasks","tasksElements","key","TodoListFooter","toShow","setToShow","classForAll","filterValue","classForCompleted","classForActive","changeFilter","AddNewItemForm","addItem","nameChange","setNameChange","error","setError","placeholder","repository","saveTodolists","todolists","_save","getTodolists","stateAsString","localStorage","getItem","JSON","parse","saveTasks","todolistsId","getTasks","data","stringify","setItem","_get","newTaskId","TodoList","todoList","newTask","newTasks","newFilterValue","useEffect","restoreState","changeTask","obj","t","newText","filter","TodoLists","newTodoLists","todoLists","newTodoList","tl","newTitle","Tuesday","App","path","reducers","combineReducers","myName","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b3f6eeab.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport './MyName.scss'\r\n\r\nconst MyName = () => {\r\n\r\n  const [name] = useState('Midaev Akhmad');\r\n\r\n  return (\r\n    <div className='name'>\r\n      {name}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyName;","import React from 'react';\r\n\r\nconst MySkill = ({skill}) => {\r\n  return (\r\n    <div className='skill'>\r\n      {skill}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MySkill;","import React from 'react';\r\nimport MySkill from \"./MySkill\";\r\nimport './MySkills.scss'\r\n\r\nconst MySkills = ({arrSkills}) => {\r\n\r\n  const allMySkills = arrSkills.map(skill => <MySkill skill={skill}/>);\r\n\r\n  return (\r\n    <div className='skills-inner'>\r\n      {allMySkills}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MySkills;","import React, {Component} from 'react';\r\nimport MySkills from \"../../Component/MySkills/MySkills\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass MySkillsContainer extends Component {\r\n  render() {\r\n    return <MySkills arrSkills={this.props.arrSkills}/>\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  arrSkills: state.mySkills.skills\r\n});\r\n\r\nexport default connect(mapStateToProps) (MySkillsContainer);","import React from 'react';\r\n\r\nconst Input = ({onNewNameChange, namesFriends}) => {\r\n\r\n\r\n  return <input onChange={onNewNameChange} value={namesFriends} autoFocus={true}/>;\r\n};\r\n\r\nexport default Input;","import React from 'react';\r\n\r\nconst Button = ({namesFriends, setNewName, setNamesFriends}) => {\r\n\r\n  const enterNewName = () => {\r\n    setNamesFriends('');\r\n    setNewName(namesFriends)\r\n  };\r\n\r\n  return <button onClick={enterNewName}/>;\r\n};\r\n\r\nexport default Button;","import React, {useState} from 'react';\r\nimport Input from \"../common/Input\";\r\nimport Button from \"../common/Button\";\r\n\r\nconst EnterNewFriendName = ({setNewName}) => {\r\n\r\n  const [namesFriends, setNamesFriends] = useState('');\r\n\r\n  const onNewNameChange = (e) => {\r\n    const newValue = e.target.value;\r\n    setNamesFriends(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className='enter-friend'>\r\n      <Input onNewNameChange={onNewNameChange} namesFriends={namesFriends}/>\r\n      <Button setNewName={setNewName} namesFriends={namesFriends} setNamesFriends={setNamesFriends}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EnterNewFriendName;","import React from 'react';\r\n\r\nconst NameMyFriend = ({name}) => {\r\n  return (\r\n    <div>\r\n      <div>{name}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NameMyFriend;","import React from 'react';\r\nimport EnterNewFriendName from \"./enterNewFriendName\";\r\nimport NameMyFriend from \"./nameMyFriend\";\r\nimport './myFriends.scss'\r\n\r\nconst NamesMyFriends = ({arrNamesFriends, setNewName}) => {\r\n\r\n  const names = arrNamesFriends.map(name => <NameMyFriend name={name}/>);\r\n  return (\r\n    <div className='friends-inner'>\r\n      <div className='enter'><EnterNewFriendName setNewName={setNewName}/></div>\r\n      <div className='name'>{names}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NamesMyFriends;","const initialState = {\r\n  namesMyFriends: [],\r\n};\r\n\r\n\r\nconst namesMyFriends = (state=initialState, action) => {\r\n  switch (action.type) {\r\n    case 'SET-NEW-NAME-FRIEND':\r\n      return {...state, namesMyFriends: [...state.namesMyFriends, action.payload]};\r\n    default:\r\n      return state\r\n  }\r\n\r\n};\r\n\r\nexport const setNewName = (payload) => ({type: 'SET-NEW-NAME-FRIEND', payload});\r\n\r\nexport default namesMyFriends;","import React from 'react';\r\nimport NamesMyFriends from '../../Component/myFriends/namesMyFriends';\r\nimport {connect} from \"react-redux\";\r\nimport {setNewName} from \"../../redux/reducers/namesMyFriends\";\r\n\r\nclass NamesMyFriendsContainer extends React.Component{\r\n  render() {\r\n    return <NamesMyFriends arrNamesFriends={this.props.nameMyFriend}\r\n                           setNewName={this.props.setNewName}/>\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  nameMyFriend: state.namesFriends.namesMyFriends,\r\n});\r\n\r\nexport default connect(mapStateToProps, {setNewName})(NamesMyFriendsContainer);","import React from 'react';\r\nimport MyName from \"../MyName/MyName\";\r\nimport MySkills from \"../../Containers/MySkills/MySkills\";\r\nimport NamesMyFriends from \"../../Containers/myFriends/namesMyFriends\";\r\n\r\nconst Monday = () => {\r\n  return (\r\n    <div>\r\n      <div className='app__info-me'>\r\n        <MyName/>\r\n        <MySkills/>\r\n      </div>\r\n      <div className='app__info-friends'>\r\n        <NamesMyFriends/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Monday;","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <nav>\r\n      <ul>\r\n        <li><NavLink to='/monday'>Monday</NavLink></li>\r\n        <li><NavLink to='/tuesday'>Tuesday</NavLink></li>\r\n        <li><NavLink to='/wednesday'>Wednesday</NavLink></li>\r\n        <li><NavLink to='/thursday'>Thursday</NavLink></li>\r\n        <li><NavLink to='/friday'>Friday</NavLink></li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;","import React from 'react';\r\n\r\nconst Thursday = () => {\r\n  return (\r\n    <div>\r\n      Thursday\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Thursday;","import React from 'react';\r\nconst Friday = () => {\r\n  return (\r\n    <div>\r\n      Friday\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Friday;","import React from 'react';\r\n\r\nconst Wednesday = () => {\r\n  return (\r\n    <div>\r\n      Wednesday\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wednesday;","import React from 'react'\r\n\r\nconst TodoListTitle = (props) => {\r\n  return (\r\n      <h3 className=\"todoList-header__title\">\r\n        {props.title}\r\n      </h3>\r\n  )\r\n};\r\n\r\nexport default TodoListTitle\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nclass TodoListTask extends React.Component {\r\n\r\n  state = {\r\n    editMode: false,\r\n  };\r\n\r\n  onIsDoneChanged = (e) => {\r\n    this.props.changeStatus(this.props.task, e.currentTarget.checked)\r\n  };\r\n  onTitleChanged = (e) => {\r\n    this.props.changeTitle(this.props.task, e.target.value)\r\n  };\r\n\r\n  activatedEditMode = () => {\r\n    this.setState({\r\n      editMode: true\r\n    })\r\n  };\r\n  deActivatedEditMode = () => {\r\n    this.setState({\r\n      editMode: false\r\n    })\r\n  };\r\n\r\n  render = () => {\r\n    return (\r\n      <div className=\"todoList-task\">\r\n        <input onChange={this.onIsDoneChanged}\r\n               type=\"checkbox\"\r\n               checked={this.props.task.isDone}/>\r\n\r\n        <span className={this.props.task.isDone ? 'taskCompleted' : ''}>\r\n          {this.props.task.id} - &nbsp;\r\n        </span>\r\n        {this.state.editMode ?\r\n          <input\r\n            value={this.props.task.title}\r\n            onChange={this.onTitleChanged}\r\n            autoFocus={true}\r\n            onBlur={this.deActivatedEditMode}\r\n\r\n          />\r\n          : <span onClick={this.activatedEditMode} className={this.props.task.isDone ? 'taskCompleted' : ''}>\r\n\r\n            {this.props.task.title},</span>}\r\n\r\n        <span className={this.props.task.isDone ? 'taskCompleted' : ''}>\r\n          priority: {this.props.task.priority}\r\n        </span>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TodoListTask;\r\n\r\n\r\nTodoListTask.propTypes = {\r\n  title: PropTypes.string,\r\n  isDone: PropTypes.bool,\r\n  priority: PropTypes.string,\r\n}","import React from 'react'\r\nimport TodoListTask from \"./TodoListTask\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TodoListTasks = ({tasks, changeStatus, changeTitle}) => {\r\n\r\n    let tasksElements =\r\n      tasks.map(task => <TodoListTask\r\n          key={task}\r\n          task={task}\r\n          changeStatus={changeStatus}\r\n          changeTitle={changeTitle}\r\n        />);\r\n\r\n    return (\r\n      <div className=\"todoList-tasks\">\r\n        {tasksElements}\r\n      </div>\r\n    )\r\n\r\n};\r\n\r\nexport default TodoListTasks;\r\n\r\n\r\nTodoListTasks.propTypes = {\r\n  title: PropTypes.string,\r\n  isDone: PropTypes.bool,\r\n  priority: PropTypes.string,\r\n};\r\n\r\n","import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst TodoListFooter = (props) => {\r\n\r\n  let [toShow, setToShow] = useState(false);\r\n\r\n  const onClickForShow = () => {\r\n\r\n    setToShow(true)\r\n  };\r\n  const onClickForSide = () => {\r\n\r\n    setToShow(false)\r\n  };\r\n\r\n  let classForAll = props.filterValue === 'All' ? 'filterActive' : '';\r\n  let classForCompleted = props.filterValue === 'Completed' ? 'filterActive' : '';\r\n  let classForActive = props.filterValue === 'Active' ? 'filterActive' : '';\r\n\r\n  return (\r\n    <div>\r\n      <div className={toShow ? 'toShow' : 'toSide'}>\r\n        <div className=\"todoList-footer\">\r\n          <button\r\n            onClick={() => {\r\n              props.changeFilter('All')\r\n            }}\r\n            className={classForAll}>All\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              props.changeFilter('Completed')\r\n            }}\r\n            className={classForCompleted}>Completed\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              props.changeFilter('Active')\r\n            }}\r\n            className={classForActive}>Active\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <button onClick={onClickForSide} className={toShow ? 'toShow' : 'toSide'}>Side</button>\r\n      </div>\r\n      <div>\r\n        <button onClick={onClickForShow} className={toShow ? 'toSide' : 'toShow'}>Show</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoListFooter;\r\n\r\nTodoListFooter.propTypes = {\r\n  filterValue: PropTypes.string,\r\n};\r\n","import React, {useState} from 'react'\r\n\r\nconst AddNewItemForm = ({addItem}) => {\r\n\r\n  let [nameChange, setNameChange] = useState('');\r\n  let [error, setError] = useState(false);\r\n\r\n\r\n  let handleChange = (e) => {\r\n    setNameChange(nameChange = e.target.value);\r\n  };\r\n\r\n  let onAddItemClick = () => {\r\n\r\n    if (nameChange === '') {\r\n      setError(error = true)\r\n    }\r\n    if (nameChange !== '') {\r\n      setError(error = false)\r\n    }\r\n    if (!error) {\r\n      addItem(nameChange);\r\n      setNameChange(nameChange = '')\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"todoList-newTaskForm\">\r\n      <input type=\"text\"\r\n             placeholder=\"New task name\"\r\n             onChange={handleChange}\r\n             value={nameChange}\r\n             className={error ? 'errorInput' : ''}\r\n      />\r\n      <button onClick={onAddItemClick}>Add</button>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default AddNewItemForm\r\n","export const repository = {\r\n  saveTodolists(todolists) {\r\n    this._save(todolists, 'todolists')\r\n  },\r\n\r\n  getTodolists() {\r\n    //this._get('todolists')\r\n    let stateAsString = localStorage.getItem('todolists' );\r\n    if (stateAsString != null) {\r\n      let state = JSON.parse(stateAsString);\r\n      return state\r\n    }\r\n    return null\r\n  },\r\n\r\n  saveTasks(tasks, todolistsId) {\r\n    this._save(tasks, 'out-state-' + todolistsId)\r\n  },\r\n\r\n  getTasks(todolistsId) {\r\n    // this._get('out-state-' + id)\r\n    let stateAsString = localStorage.getItem('out-state-' + todolistsId );\r\n    if (stateAsString != null) {\r\n      let state = JSON.parse(stateAsString);\r\n      return state\r\n    }\r\n    return null\r\n  },\r\n\r\n  _save(data, key) {\r\n    let stateAsString = JSON.stringify(data);\r\n    localStorage.setItem(key, stateAsString)\r\n  },\r\n  _get(key) {\r\n    let stateAsString = localStorage.getItem(key);\r\n    if (stateAsString != null) {\r\n      let state = JSON.parse(stateAsString);\r\n      return state\r\n    }\r\n    return null\r\n  },\r\n};","const initialState = {\r\n  tasks: [],\r\n  filterValue: 'All',\r\n  newTaskId: 0,\r\n};\r\n\r\nconst TodoList = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'NEW-TASK':\r\n      return {\r\n        ...state, newTaskId: state.newTaskId + 1,\r\n        tasks: [...state.tasks,\r\n          {\r\n            id: state.newTaskId, title: action.title,\r\n            isDone: false, priority: 'low'\r\n          }]\r\n      };\r\n    case 'NEW-TASKS':\r\n      return {\r\n        ...state,\r\n        tasks: [...state.tasks, {...action.tasks}]\r\n      };\r\n\r\n    case 'NEW-FILTER-VALUE':\r\n      return {\r\n        ...state, filterValue: action.value\r\n      };\r\n\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\nexport const newTask = (title) => ({type: 'NEW-TASK', title});\r\nexport const newTasks = (tasks) => ({type: 'NEW-TASKS', tasks});\r\nexport const newFilterValue = (value) => ({type: 'NEW-FILTER-VALUE', value});\r\n\r\nexport default TodoList","import React, {useEffect} from 'react';\nimport TodoListTitle from './TodoListTitle';\nimport TodoListTasks from './TodoListTasks';\nimport TodoListFooter from './TodoListFooter';\nimport AddNewItemForm from \"./AddNewItemForm\";\nimport {repository} from \"./repository\";\nimport {connect} from \"react-redux\";\nimport {newTask, newTasks, newFilterValue} from \"../../../redux/reducers/todoList\";\n\n\nconst TodoList = ({tasks, id, newTask, newTasks, newFilterValue}) => {\n\n  const saveState = () => {\n\n    repository.saveTasks(tasks, id)\n  };\n  const restoreState = () => {\n    let tasks = repository.getTasks(id);\n    newTasks(tasks)\n  };\n  const addItem = (newText) => {\n    newTask(newText)\n  };\n  useEffect(() => {restoreState()}, []);\n  useEffect(() => {saveState()}, [tasks]);\n\n  const changeFilter = (filterValue) => {\n    newFilterValue(filterValue)\n  };\n\n  const changeTask = (task, obj) => {\n    let tasks = tasks.map(t => {\n      if (t === task) {\n        return {...t, ...obj}\n      } else {\n        return t\n      }\n    });\n    newTask(tasks.tasks)\n\n  };\n\n  const changeStatus = (task, isDone) => {\n    changeTask(task, {isDone})\n  };\n\n  const changeTitle = (task, title) => {\n    changeTask(task, {title})\n  };\n  return (\n\n    <div className=\"todoList\">\n      <div className='todoList-header'>\n        <TodoListTitle title={tasks.title}/>\n        <AddNewItemForm addItem={addItem}/>\n      </div>\n      <TodoListTasks\n        changeStatus={changeStatus}\n        changeTitle={changeTitle}\n        tasks={tasks.tasks.filter(t => {\n        if (tasks.filterValue === 'All') {\n          return true\n        }\n        if (tasks.filterValue === 'Completed') {\n          return t.isDone === true;\n        }\n        if (tasks.filterValue === 'Active') {\n          return t.isDone === false;\n        }\n      })}\n      />\n      <TodoListFooter changeFilter={changeFilter}\n                      filterValue={tasks.filterValue}/>\n    </div>\n  )\n};\n\nconst mapStateToProps = ({todoList}) => ({\n  tasks: todoList,\n  id: todoList.newTaskId,\n});\n\nexport default connect(mapStateToProps, {newTask, newTasks,newFilterValue})(TodoList);\n","const initialState = {\r\n  todolists: [],\r\n  todolistsId: 0,\r\n};\r\n\r\nconst TodoLists = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'NEW-TODO-LIST':\r\n      return {\r\n        ...state,\r\n        todolistsId: state.todolistsId + 1,\r\n        todolists: [...state.todolists, {id: state.todolistsId, title: action.title}]\r\n      };\r\n    case 'NEW-TODO-LISTS':\r\n      return {\r\n        ...state, todolists: [...state.todolists, ...action.newTodoLists]\r\n      };\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\nexport const newTodoList = (title) => ({type: 'NEW-TODO-LIST', title});\r\nexport const newTodoLists = (newTodoLists) => ({type: 'NEW-TODO-LISTS', newTodoLists});\r\n\r\nexport default TodoLists","import React, {useEffect} from 'react';\nimport TodoList from \"./TodoList\";\nimport AddNewItemForm from \"./AddNewItemForm\";\nimport {repository} from \"./repository\";\nimport {connect} from \"react-redux\";\nimport {newTodoList, newTodoLists} from \"../../../redux/reducers/todoLists\";\n\nconst MainTodoList = ({todolists, newTodoList, newTodoLists}) => {\n\n  const saveState = () => {\n    repository.saveTodolists(todolists)\n  };\n  const restoreState = () => {\n    const todolists = repository.getTodolists();\n    if (todolists != null) {\n      newTodoLists(todolists)\n    }\n  };\n  useEffect(() => {\n    restoreState()\n  }, []);\n  useEffect(() => {\n    saveState()\n  }, [todolists]);\n  const addItem = (newTitle) => {\n    newTodoList(newTitle);\n  };\n\n  const tl = todolists.map(tl => <TodoList key={tl.id} id={tl.id} title={tl.title}/>);\n  return (\n    <>\n      <div>\n        <AddNewItemForm addItem={addItem}/>\n      </div>\n      <div className='app-inner'>\n        {tl}\n      </div>\n    </>\n  )\n\n}\n\nconst mapStateToProps = ({todoLists}) => ({\n  todolistsId: todoLists.todolistsId,\n  todolists: todoLists.todolists,\n  state: todoLists,\n});\n\nexport default connect(mapStateToProps, {newTodoList, newTodoLists})(MainTodoList);\n\n","import React from 'react';\r\nimport MainTodoList from \"./todoLists/MainTodoList\";\r\n\r\nconst Tuesday = () => {\r\n  return <MainTodoList/>;\r\n};\r\n\r\nexport default Tuesday;","import React from 'react';\nimport './App.scss';\nimport Monday from \"./Component/TheMonday/Monday\";\nimport NavBar from \"./Component/NavBar/NavBar\";\nimport {Route} from \"react-router-dom\";\nimport Thursday from \"./Component/Thursday/Thursday\";\nimport Friday from \"./Component/Friday/Friday\";\nimport Wednesday from \"./Component/Wednesday/Wednesday\";\nimport Tuesday from \"./Component/Tuesday/Tuesday\";\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <div className='app__nav'>\n        <NavBar/>\n      </div>\n      <div className=\"app__main\">\n      <div className='app__main-window'>\n        <Route path='/monday' render={() => <Monday/>}/>\n        <Route path='/tuesday' render={() => <Tuesday/>}/>\n        <Route path='/wednesday' render={() => <Wednesday/>}/>\n        <Route path='/thursday' render={() => <Thursday/>}/>\n        <Route path='/friday' render={() => <Friday/>}/>\n      </div>\n    </div>\n    </div>\n  );\n};\n\nexport default App;\n","const initialState = {\r\n  skills: ['Общительный','Жизнерадостный','Трудолюбивый']\r\n};\r\n\r\nconst mySkills = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    default: return state\r\n  }\r\n};\r\n\r\nexport default mySkills","const initialState = {\r\n  name: 'Midaev Akhmad'\r\n};\r\n\r\nconst MyName = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    default: return state\r\n  }\r\n};\r\n\r\nexport default MyName","import {combineReducers, createStore} from \"redux\";\r\nimport namesMyFriends from \"./reducers/namesMyFriends\";\r\nimport MySkills from \"./reducers/mySkills\";\r\nimport MyName from \"./reducers/myName\";\r\nimport TodoLists from \"./reducers/todoLists\";\r\nimport TodoList from \"./reducers/todoList\";\r\n\r\nconst reducers = combineReducers({\r\n  namesFriends: namesMyFriends,\r\n  mySkills: MySkills,\r\n  myName: MyName,\r\n  todoLists: TodoLists,\r\n  todoList: TodoList,\r\n});\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\r\nconst store = createStore(reducers, composeEnhancers());\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </HashRouter>\n  , document.getElementById('root'));\n"],"sourceRoot":""}