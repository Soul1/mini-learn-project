{"version":3,"sources":["Component/MyName/MyName.jsx","Component/MySkills/MySkill.jsx","Component/MySkills/MySkills.jsx","Containers/MySkills/MySkills.jsx","Component/common/Input.jsx","Component/common/Button.jsx","Component/myFriends/enterNewFriendName.jsx","Component/myFriends/nameMyFriend.jsx","Component/myFriends/namesMyFriends.jsx","redux/reducers/namesMyFriends.js","Containers/myFriends/namesMyFriends.js","Component/TheMonday/Monday.jsx","Component/NavBar/NavBar.jsx","Component/Thursday/Thursday.jsx","Component/Friday/Friday.jsx","Component/Wednesday/Wednesday.jsx","Component/Tuesday/todoLists/TodoListTitle.jsx","Component/Tuesday/todoLists/TodoListTask.jsx","Component/Tuesday/todoLists/TodoListTasks.jsx","Component/Tuesday/todoLists/TodoListFooter.jsx","Component/Tuesday/todoLists/AddNewItemForm.jsx","Component/Tuesday/todoLists/repository.js","Component/Tuesday/todoLists/TodoList.jsx","redux/reducers/todoLists.js","Component/Tuesday/todoLists/MainTodoList.jsx","Component/Tuesday/Tuesday.jsx","App.js","redux/reducers/mySkills.js","redux/reducers/myName.js","redux/store.js","index.js"],"names":["MyName","useState","name","className","MySkill","skill","MySkills","allMySkills","arrSkills","map","MySkillsContainer","this","props","Component","connect","state","mySkills","skills","Input","onNewNameChange","namesFriends","onChange","value","autoFocus","Button","setNewName","setNamesFriends","onClick","EnterNewFriendName","e","newValue","target","NameMyFriend","NamesMyFriends","arrNamesFriends","names","initialState","namesMyFriends","action","type","payload","NamesMyFriendsContainer","nameMyFriend","React","Monday","NavBar","to","Thursday","Friday","Wednesday","TodoListTitle","title","TodoListTask","editMode","onIsDoneChanged","changeStatus","task","currentTarget","checked","onTitleChanged","changeTitle","activatedEditMode","setState","deActivatedEditMode","render","isDone","id","onBlur","priority","TodoListTasks","tasksElements","tasks","TodoListFooter","toShow","setToShow","classForAll","filterValue","classForCompleted","classForActive","changeFilter","AddNewItemForm","nameChange","setNameChange","error","setError","placeholder","addItem","repository","saveTodolists","todolists","_save","getTodolists","stateAsString","localStorage","getItem","JSON","parse","saveTasks","todolistsId","getTasks","data","key","stringify","setItem","_get","TodoList","saveState","restoreState","newTaskId","newText","newTask","newTasks","newFilterValue","changeTask","obj","t","filter","newTodoList","TodoLists","MainTodoList","newTitle","tl","todoLists","Tuesday","App","path","reducers","combineReducers","myName","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ad29c3b7.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport './MyName.scss'\r\n\r\nconst MyName = () => {\r\n\r\n  const [name] = useState('Midaev Akhmad');\r\n\r\n  return (\r\n    <div className='name'>\r\n      {name}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyName;","import React from 'react';\r\n\r\nconst MySkill = ({skill}) => {\r\n  return (\r\n    <div className='skill'>\r\n      {skill}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MySkill;","import React from 'react';\r\nimport MySkill from \"./MySkill\";\r\nimport './MySkills.scss'\r\n\r\nconst MySkills = ({arrSkills}) => {\r\n\r\n  const allMySkills = arrSkills.map(skill => <MySkill skill={skill}/>);\r\n\r\n  return (\r\n    <div className='skills-inner'>\r\n      {allMySkills}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MySkills;","import React, {Component} from 'react';\r\nimport MySkills from \"../../Component/MySkills/MySkills\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass MySkillsContainer extends Component {\r\n  render() {\r\n    return <MySkills arrSkills={this.props.arrSkills}/>\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  arrSkills: state.mySkills.skills\r\n});\r\n\r\nexport default connect(mapStateToProps) (MySkillsContainer);","import React from 'react';\r\n\r\nconst Input = ({onNewNameChange, namesFriends}) => {\r\n\r\n\r\n  return <input onChange={onNewNameChange} value={namesFriends} autoFocus={true}/>;\r\n};\r\n\r\nexport default Input;","import React from 'react';\r\n\r\nconst Button = ({namesFriends, setNewName, setNamesFriends}) => {\r\n\r\n  const enterNewName = () => {\r\n    setNamesFriends('');\r\n    setNewName(namesFriends)\r\n  };\r\n\r\n  return <button onClick={enterNewName}/>;\r\n};\r\n\r\nexport default Button;","import React, {useState} from 'react';\r\nimport Input from \"../common/Input\";\r\nimport Button from \"../common/Button\";\r\n\r\nconst EnterNewFriendName = ({setNewName}) => {\r\n\r\n  const [namesFriends, setNamesFriends] = useState('');\r\n\r\n  const onNewNameChange = (e) => {\r\n    const newValue = e.target.value;\r\n    setNamesFriends(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className='enter-friend'>\r\n      <Input onNewNameChange={onNewNameChange} namesFriends={namesFriends}/>\r\n      <Button setNewName={setNewName} namesFriends={namesFriends} setNamesFriends={setNamesFriends}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EnterNewFriendName;","import React from 'react';\r\n\r\nconst NameMyFriend = ({name}) => {\r\n  return (\r\n    <div>\r\n      <div>{name}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NameMyFriend;","import React from 'react';\r\nimport EnterNewFriendName from \"./enterNewFriendName\";\r\nimport NameMyFriend from \"./nameMyFriend\";\r\nimport './myFriends.scss'\r\n\r\nconst NamesMyFriends = ({arrNamesFriends, setNewName}) => {\r\n\r\n  const names = arrNamesFriends.map(name => <NameMyFriend name={name}/>);\r\n  return (\r\n    <div className='friends-inner'>\r\n      <div className='enter'><EnterNewFriendName setNewName={setNewName}/></div>\r\n      <div className='name'>{names}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NamesMyFriends;","const initialState = {\r\n  namesMyFriends: [],\r\n};\r\n\r\n\r\nconst namesMyFriends = (state=initialState, action) => {\r\n  switch (action.type) {\r\n    case 'SET-NEW-NAME-FRIEND':\r\n      return {...state, namesMyFriends: [...state.namesMyFriends, action.payload]};\r\n    default:\r\n      return state\r\n  }\r\n\r\n};\r\n\r\nexport const setNewName = (payload) => ({type: 'SET-NEW-NAME-FRIEND', payload});\r\n\r\nexport default namesMyFriends;","import React from 'react';\r\nimport NamesMyFriends from '../../Component/myFriends/namesMyFriends';\r\nimport {connect} from \"react-redux\";\r\nimport {setNewName} from \"../../redux/reducers/namesMyFriends\";\r\n\r\nclass NamesMyFriendsContainer extends React.Component{\r\n  render() {\r\n    return <NamesMyFriends arrNamesFriends={this.props.nameMyFriend}\r\n                           setNewName={this.props.setNewName}/>\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  nameMyFriend: state.namesFriends.namesMyFriends,\r\n});\r\n\r\nexport default connect(mapStateToProps, {setNewName})(NamesMyFriendsContainer);","import React from 'react';\r\nimport MyName from \"../MyName/MyName\";\r\nimport MySkills from \"../../Containers/MySkills/MySkills\";\r\nimport NamesMyFriends from \"../../Containers/myFriends/namesMyFriends\";\r\n\r\nconst Monday = () => {\r\n  return (\r\n    <div>\r\n      <div className='app__info-me'>\r\n        <MyName/>\r\n        <MySkills/>\r\n      </div>\r\n      <div className='app__info-friends'>\r\n        <NamesMyFriends/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Monday;","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <nav>\r\n      <ul>\r\n        <li><NavLink to='/monday'>Monday</NavLink></li>\r\n        <li><NavLink to='/tuesday'>Tuesday</NavLink></li>\r\n        <li><NavLink to='/wednesday'>Wednesday</NavLink></li>\r\n        <li><NavLink to='/thursday'>Thursday</NavLink></li>\r\n        <li><NavLink to='/friday'>Friday</NavLink></li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;","import React from 'react';\r\n\r\nconst Thursday = () => {\r\n  return (\r\n    <div>\r\n      Thursday\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Thursday;","import React from 'react';\r\nconst Friday = () => {\r\n  return (\r\n    <div>\r\n      Friday\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Friday;","import React from 'react';\r\n\r\nconst Wednesday = () => {\r\n  return (\r\n    <div>\r\n      Wednesday\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wednesday;","import React from 'react'\r\n\r\nconst TodoListTitle = (props) => {\r\n  return (\r\n      <h3 className=\"todoList-header__title\">\r\n        {props.title}\r\n      </h3>\r\n  )\r\n};\r\n\r\nexport default TodoListTitle\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nclass TodoListTask extends React.Component {\r\n\r\n  state = {\r\n    editMode: false,\r\n  };\r\n\r\n  onIsDoneChanged = (e) => {\r\n    this.props.changeStatus(this.props.task, e.currentTarget.checked)\r\n  };\r\n  onTitleChanged = (e) => {\r\n    this.props.changeTitle(this.props.task, e.target.value)\r\n  };\r\n\r\n  activatedEditMode = () => {\r\n    this.setState({\r\n      editMode: true\r\n    })\r\n  };\r\n  deActivatedEditMode = () => {\r\n    this.setState({\r\n      editMode: false\r\n    })\r\n  };\r\n\r\n  render = () => {\r\n    return (\r\n      <div className=\"todoList-task\">\r\n        <input onChange={this.onIsDoneChanged}\r\n               type=\"checkbox\"\r\n               checked={this.props.task.isDone}/>\r\n\r\n        <span className={this.props.task.isDone ? 'taskCompleted' : ''}>\r\n          {this.props.task.id} - &nbsp;\r\n        </span>\r\n        {this.state.editMode ?\r\n          <input\r\n            value={this.props.task.title}\r\n            onChange={this.onTitleChanged}\r\n            autoFocus={true}\r\n            onBlur={this.deActivatedEditMode}\r\n\r\n          />\r\n          : <span onClick={this.activatedEditMode} className={this.props.task.isDone ? 'taskCompleted' : ''}>\r\n\r\n            {this.props.task.title},</span>}\r\n\r\n        <span className={this.props.task.isDone ? 'taskCompleted' : ''}>\r\n          priority: {this.props.task.priority}\r\n        </span>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TodoListTask;\r\n\r\n\r\nTodoListTask.propTypes = {\r\n  title: PropTypes.string,\r\n  isDone: PropTypes.bool,\r\n  priority: PropTypes.string,\r\n}","import React from 'react'\r\nimport TodoListTask from \"./TodoListTask\";\r\nimport PropTypes from 'prop-types';\r\n\r\nclass TodoListTasks extends React.Component {\r\n  render = () => {\r\n    let tasksElements =\r\n      this.props.tasks\r\n        .map(task => <TodoListTask\r\n          task={task}\r\n          changeStatus={this.props.changeStatus}\r\n          changeTitle={this.props.changeTitle}\r\n        />)\r\n\r\n    return (\r\n      <div className=\"todoList-tasks\">\r\n        {tasksElements}\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default TodoListTasks;\r\n\r\n\r\nTodoListTasks.propTypes = {\r\n  title: PropTypes.string,\r\n  isDone: PropTypes.bool,\r\n  priority: PropTypes.string,\r\n}\r\n\r\n","import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst TodoListFooter = (props) => {\r\n\r\n  let [toShow, setToShow] = useState(false);\r\n\r\n  const onClickForShow = () => {\r\n\r\n    setToShow(true)\r\n  };\r\n  const onClickForSide = () => {\r\n\r\n    setToShow(false)\r\n  };\r\n\r\n  let classForAll = props.filterValue === 'All' ? 'filterActive' : '';\r\n  let classForCompleted = props.filterValue === 'Completed' ? 'filterActive' : '';\r\n  let classForActive = props.filterValue === 'Active' ? 'filterActive' : '';\r\n\r\n  return (\r\n    <div>\r\n      <div className={toShow ? 'toShow' : 'toSide'}>\r\n        <div className=\"todoList-footer\">\r\n          <button\r\n            onClick={() => {\r\n              props.changeFilter('All')\r\n            }}\r\n            className={classForAll}>All\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              props.changeFilter('Completed')\r\n            }}\r\n            className={classForCompleted}>Completed\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              props.changeFilter('Active')\r\n            }}\r\n            className={classForActive}>Active\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <button onClick={onClickForSide} className={toShow ? 'toShow' : 'toSide'}>Side</button>\r\n      </div>\r\n      <div>\r\n        <button onClick={onClickForShow} className={toShow ? 'toSide' : 'toShow'}>Show</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoListFooter;\r\n\r\nTodoListFooter.propTypes = {\r\n  filterValue: PropTypes.string,\r\n};\r\n","import React, {useState} from 'react'\r\n\r\nconst AddNewItemForm = (props) => {\r\n\r\n  let [nameChange, setNameChange] = useState('')\r\n  let [error, setError] = useState(false)\r\n\r\n\r\n  let handleChange = (e) => {\r\n    setNameChange(nameChange = e.target.value);\r\n  };\r\n\r\n  let onAddItemClick = () => {\r\n\r\n    if (nameChange === '') {\r\n      setError(error = true)\r\n    }\r\n    if (nameChange !== '') {\r\n      setError(error = false)\r\n    }\r\n    if (!error) {\r\n      props.addItem(nameChange);\r\n      setNameChange(nameChange = '')\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"todoList-newTaskForm\">\r\n      <input type=\"text\"\r\n             placeholder=\"New task name\"\r\n             onChange={handleChange}\r\n             value={nameChange}\r\n             className={error ? 'errorInput' : ''}\r\n      />\r\n      <button onClick={onAddItemClick}>Add</button>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default AddNewItemForm\r\n","export const repository = {\r\n  saveTodolists(todolists) {\r\n    this._save(todolists, 'todolists')\r\n  },\r\n\r\n  getTodolists() {\r\n    //this._get('todolists')\r\n    let stateAsString = localStorage.getItem('todolists' );\r\n    if (stateAsString != null) {\r\n      let state = JSON.parse(stateAsString);\r\n      return state\r\n    }\r\n    return null\r\n  },\r\n\r\n  saveTasks(tasks, todolistsId) {\r\n    this._save(tasks, 'out-state-' + todolistsId)\r\n  },\r\n\r\n  getTasks(todolistsId) {\r\n    // this._get('out-state-' + id)\r\n    let stateAsString = localStorage.getItem('out-state-' + todolistsId );\r\n    if (stateAsString != null) {\r\n      let state = JSON.parse(stateAsString);\r\n      return state\r\n    }\r\n    return null\r\n  },\r\n\r\n  _save(data, key) {\r\n    let stateAsString = JSON.stringify(data);\r\n    localStorage.setItem(key, stateAsString)\r\n  },\r\n  _get(key) {\r\n    let stateAsString = localStorage.getItem(key);\r\n    if (stateAsString != null) {\r\n      let state = JSON.parse(stateAsString);\r\n      return state\r\n    }\r\n    return null\r\n  },\r\n};","import React from 'react';\nimport TodoListTitle from './TodoListTitle';\nimport TodoListTasks from './TodoListTasks';\nimport TodoListFooter from './TodoListFooter';\nimport AddNewItemForm from \"./AddNewItemForm\";\nimport {repository} from \"./repository\";\n\n\nclass TodoList extends React.Component {\n\n  saveState = () => {\n    repository.saveTasks(this.state, this.props.id)\n  };\n  restoreState = () => {\n    let state = repository.getTasks(this.props.id);\n    this.setState(state)\n  };\n\n  // restoreState = () => {\n  //   repository.getTasks(this.props.id)\n  //   let state = {\n  //     tasks: [],\n  //     filterValue: 'All',\n  //     newTaskId: 0,\n  //   };\n  //   let stateAsString = localStorage.getItem('out-state-' + );\n  //   if (stateAsString != null) {\n  //     state = JSON.parse(stateAsString)\n  //   }\n  //   this.setState(state)\n  // };\n  state = {\n    tasks: [],\n    filterValue: 'All',\n    newTaskId: 0,\n  };\n\n  componentDidMount() {\n    this.restoreState()\n  }\n\n  addItem = (newText) => {\n    let newTask = {\n      id: this.state.newTaskId,\n      title: newText,\n      isDone: false,\n      priority: 'low'\n    };\n    this.state.newTaskId++;\n    let newTasks = [...this.state.tasks, newTask];\n    this.setState({\n      tasks: newTasks\n    }, () => this.saveState());\n  };\n\n  changeFilter = (newFilterValue) => {\n    this.setState({\n      filterValue: newFilterValue\n    }, () => this.saveState());\n  };\n\n  changeTask = (task, obj) => {\n    let newTasks = this.state.tasks.map(t => {\n      if (t === task) {\n        return {...t, ...obj}\n      } else {\n        return t\n      }\n    });\n    this.setState({\n      tasks: newTasks\n    }, () => this.saveState())\n  };\n\n\n  changeStatus = (task, isDone) => {\n    this.changeTask(task, {isDone})\n  };\n\n  changeTitle = (task, title) => {\n    this.changeTask(task, {title})\n  };\n\n  render = () => {\n    return (\n      <div className=\"todoList\">\n        <div className='todoList-header'>\n          <TodoListTitle title={this.props.title}/>\n          <AddNewItemForm addItem={this.addItem}/>\n        </div>\n        <TodoListTasks\n          changeStatus={this.changeStatus}\n          changeTitle={this.changeTitle}\n          tasks={this.state.tasks.filter(t => {\n            if (this.state.filterValue === 'All') {\n              return true\n            }\n            if (this.state.filterValue === 'Completed') {\n              return t.isDone === true;\n            }\n            if (this.state.filterValue === 'Active') {\n              return t.isDone === false;\n            }\n          })}/>\n        <TodoListFooter changeFilter={this.changeFilter}\n                        filterValue={this.state.filterValue}/>\n      </div>\n    );\n  }\n}\n\nexport default TodoList;\n\n","const initialState = {\r\n  todolists: [],\r\n  todolistsId: 0,\r\n  tasks: [],\r\n  filterValue: 'All',\r\n  newTaskId: 0,\r\n};\r\n\r\nconst TodoLists = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'NEW-TODO-LIST':\r\n      return {\r\n        ...state, todolists: [...state.todolists, {id: state.todolistsId+1, title: action.title}]\r\n      };\r\n\r\n    default: return state\r\n  }\r\n};\r\n\r\nexport const newTodoList = (title) => ({type: 'NEW-TODO-LIST', title});\r\n\r\nexport default TodoLists","import React from 'react';\nimport TodoList from \"./TodoList\";\nimport AddNewItemForm from \"./AddNewItemForm\";\nimport {repository} from \"./repository\";\nimport {connect} from \"react-redux\";\nimport {newTodoList} from \"../../../redux/reducers/todoLists\";\n\nclass MainTodoList extends React.Component {\n  saveState = () => {\n    repository.saveTodolists(this.props.state)\n  };\n  restoreState = () => {\n    let todolists = repository.getTodolists();\n    if(todolists != null ){\n      newTodoList(todolists)\n    }\n  };\n\n  componentDidMount() {\n    this.restoreState()\n  }\n  addItem = (newTitle) => {\n    this.props.newTodoList(newTitle);\n    this.saveState()\n  };\n  render = () => {\n    const todolists = this.props\n      .todolists\n      .map(tl => <TodoList id={tl.id} title={tl.title}/>);\n    return (\n      <>\n        <div>\n          <AddNewItemForm addItem={this.addItem}/>\n        </div>\n        <div className='app-inner'>\n          {todolists}\n        </div>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = ({todoLists}) => ({\n  todolistsId: todoLists.todolistsId,\n  todolists: todoLists.todolists,\n  state: todoLists,\n});\n\nexport default connect(mapStateToProps,{newTodoList}) (MainTodoList);\n\n","import React from 'react';\r\nimport MainTodoList from \"./todoLists/MainTodoList\";\r\n\r\nconst Tuesday = () => {\r\n  return <MainTodoList/>;\r\n};\r\n\r\nexport default Tuesday;","import React from 'react';\nimport './App.scss';\nimport Monday from \"./Component/TheMonday/Monday\";\nimport NavBar from \"./Component/NavBar/NavBar\";\nimport {Route} from \"react-router-dom\";\nimport Thursday from \"./Component/Thursday/Thursday\";\nimport Friday from \"./Component/Friday/Friday\";\nimport Wednesday from \"./Component/Wednesday/Wednesday\";\nimport Tuesday from \"./Component/Tuesday/Tuesday\";\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <div className='app__nav'>\n        <NavBar/>\n      </div>\n      <div className=\"app__main\">\n      <div className='app__main-window'>\n        <Route path='/monday' render={() => <Monday/>}/>\n        <Route path='/tuesday' render={() => <Tuesday/>}/>\n        <Route path='/wednesday' render={() => <Wednesday/>}/>\n        <Route path='/thursday' render={() => <Thursday/>}/>\n        <Route path='/friday' render={() => <Friday/>}/>\n      </div>\n    </div>\n    </div>\n  );\n};\n\nexport default App;\n","const initialState = {\r\n  skills: ['Общительный','Жизнерадостный','Трудолюбивый']\r\n};\r\n\r\nconst mySkills = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    default: return state\r\n  }\r\n};\r\n\r\nexport default mySkills","const initialState = {\r\n  name: 'Midaev Akhmad'\r\n};\r\n\r\nconst MyName = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    default: return state\r\n  }\r\n};\r\n\r\nexport default MyName","import {combineReducers, createStore} from \"redux\";\r\nimport namesMyFriends from \"./reducers/namesMyFriends\";\r\nimport MySkills from \"./reducers/mySkills\";\r\nimport MyName from \"./reducers/myName\";\r\nimport TodoLists from \"./reducers/todoLists\";\r\n\r\nconst reducers = combineReducers({\r\n  namesFriends: namesMyFriends,\r\n  mySkills: MySkills,\r\n  myName: MyName,\r\n  todoLists: TodoLists,\r\n});\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\r\nconst store = createStore(reducers, composeEnhancers());\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </HashRouter>\n  , document.getElementById('root'));\n"],"sourceRoot":""}